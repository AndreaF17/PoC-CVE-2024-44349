from util.utils import is_vulnerable, get_target_info
import logging
import argparse


parser = argparse.ArgumentParser(description="A script that stores target from command-line args")
parser.add_argument('-t', '--target', type=str, required=True, help='Target to be stored')
parser.add_argument('-v', '--verbose', action='store_true', help='Verbose mode')

args = parser.parse_args()

if args.verbose:
    logging.basicConfig(level=logging.DEBUG,format='%(asctime)s - %(levelname)s - %(message)s')
else:
    logging.basicConfig(level=logging.INFO,format='%(asctime)s - %(levelname)s - %(message)s')

# Creating an object
logger = logging.getLogger()




def main():
    target = args.target
    vuln = is_vulnerable(target)
    logger.info("Is target vulnerable: {}".format(vuln))
    if not vuln:
        logger.info("Target is not vulnerable")
        return
    target_info = get_target_info(target)
    for key, value in target_info.items():
        logger.info("{}: {}".format(key, value))
if __name__ == "__main__":
    main()

